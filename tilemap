//INITIALISE TILEMAP VARIABLES
let tilemap = [];
let numDown = 10;
let numAcross = 10;
let tileSize = 50;

let textures = []

let graphicsMap = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
]

let tileAccess = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
]

let textureNum;

//INITIALISE PLAYER VARIABLES
let player;
let playerSprite;
let playerSpeed = 5;
let playerSize = tileSize; 

function preload() {
    textures[0] = loadImage("grassy.png");
    textures[1] = loadImage("stone.png");

    playerSprite = loadImage("player.png");
}

function setup() {
    createCanvas(500, 500);

    let tileID = 0;

    for (let across = 0; across < numAcross; across++) {
        tilemap[across] = [];
        for (let down = 0; down < numDown; down++) {

            let textureNum = graphicMap[down][across];

            tilemap[across][down] = new Tile(textures[textureNum], across, down, tileSize, tileID);

            tileID++;
        }
    }
    //console.log(tilemap[4][8]);
    //console.log("My tileID is", tileID, "and my texture number is", textureNum);
    player = new Player(playerSprite, 3, 4, tileSize, playerSpeed, tileSize, tileAccess);
}

function draw() {
    background(0);
    
    for (let across = 0; across < numAcross; across++) {
        for (let down = 0; down < numDown; down++) {
            tilemap[across][down].display();
            tilemap[across][down].debug();
        }
    }

    player.display();
    player.move();
}

function keyPressed() {
    player.setDirection();
}

class Tile {
    constructor(across, down, tileSize, tileID, texture) {
        this.across = across;
        this.down = down;
        this.tileSize = tileSize;
        this.tileID = tileID;
        this.texture = texture;
        this.xPos = across * this.tileSize;
        this.yPos = down * this.tileSize;

    }
    debug() {
        //TILE
        stroke(245);
        noFill();
        rect(this.x, this.y, this.tileSize, this.tileSize);

        //LABEL
        noStroke();
        fill(255);
        textAlign(LEFT, TOP);

        let twoDigitID;
        if (this.tileID < 10) { //if only one digit...
            twoDigitID = "0" + this.tileID; // adds a "0" to the front of single digit tileIDs to make it 2 digits
        } else {
            twoDigitID = this.tileID; // or just use the original ID.
        }
        
        text(twoDigitID, this.x, this.y, this.tileSize, this.tileID);
    }
    display() {
        noStroke()
        image(this.x, this.y, this.tilesize, this.tileID)
    }
}

class Player{
    constructor(sprite, startAcross, startDown, size, speed, tileAccess) {
        this.sprite = sprite;
        this.across = startAcross;
        this.down = startDown;
        this.size = size;
        this.speed = speed;
        this.tileAccess = tileAccess;

        this.xPos = xPos * this.tileSize;
        this.yPos = yPos * this.tileSize;

        this.dirX = 0;
        this.dirY = 0;

        this.isMoving = false;

        this.tx = this.xPos;
        this.ty = this.yPos;
    }

    setDirection() {
        if (!this.isMoving) {

            //UP
            if (key === "w") {
                this.dirX = 0;
                this.dirY = -1;
            }

            //LEFT
            if (key === "a") {
                this.dirX = -1;
                this.dirY = 0;
            }

            //DOWN
            if (key === "s") {
                this.dirX = 0;
                this.dirY = 1;
            }

            //RIGHT
            if (key === "d") {
                this.dirX = 1;
                this.dirY = 0;
            }

            this.checkTargetTile();
        }
    }

    checkTargetTile() {
        this.across = Math.floor(this.xPos / this.tileSize);
        this.down = Math.floor(this.yPos / this.tileSize);

        let nextTileHorizontal = this.across + this.dirX;
        let nextTileVertical = this.down + this.dirY;

        if (

            nextTileHorizontal >= 0 && //top
            nextTileHorizontal < numAcross && //bottom
            nextTileVertical >= 0 && //left
            nextTileVertical < numDown //right
        ) {
            
            if (this.tileAccess[nextTileVertical][nextTileHorizontal] != 1) {
                this.tx = nextTileHorizontal * this.tileSize;
                this.ty = nextTileVertical * this.tileSize;

                this.isMoving = true;
            }
        }
    }

    move() {
        if (this.isMoving) {
            this.xPos += this.speed * this.dirX;
            this.yPos += this.speed * this.dirY;

            if (this.xPos === this.tx && this.yPos === this.ty) {
                this.isMoving = false;
                this.dirX = 0;
                this.dirY = 0;
            }
        }
    }

    display() {
        imageMode(CORNER);
        image(this.sprite, this.xPos, this.yPos, this.size, this.size);
    }
}
